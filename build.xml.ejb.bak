<?xml version="1.0"?>

<project name="SMERF" default="main" basedir=".">

    <target name="init">
		<property file="ant.env"/>

        <property name="project" value="SIMON (Simplified Model Enterprise Runtime Framework)"/>
		<property name="currentversion" value="0.1"/>
        <property file="merf.properties"/>
		<property name="adaptor-web" value="spring-mvc/"/>
		<property name="adaptor-ejb" value="ejb/"/>
		<property name="appname" value="HRM"/>

		
		
        <property name="workspace" value="./workspace"/>
		<property name="builddir" value="./build"/>
		<property name="modeldir" value="./model"/>
		<property name="modelfile" value="${modeldir}/blueprint.xml"/>
        <property name="adaptordir-web" value="./adaptor/${adaptor-web}"/>
		<property name="adaptordir-ejb" value="./adaptor/${adaptor-ejb}"/>
		<property name="xsltdir-web" value="${adaptordir-web}/xslt"/>
		<property name="xsltdir-ejb" value="${adaptordir-ejb}/xslt"/>
		<property name="configdir-ejb" value="${adaptordir-ejb}/config"/>
		<property name="configdir-web" value="${adaptordir-web}/config"/>
		<property name="libdir-web" value="${adaptordir-web}/lib"/>
		<property name="libdir-ejb" value="${adaptordir-ejb}/lib"/>

        <property name="saxonlib" value="./lib/saxon9he.jar"/> 
		<property name="ejb-lib" value="./adaptor/ejb/lib/hibernate-jpa-2.0-api-1.0.1.Final.jar;./adaptor/ejb/lib/jboss-ejb-api_3.1_spec-1.0.1.Final.jar"/> 
		<property name="web-lib" value="./adaptor/spring-mvc/lib/commons-fileupload-1.2.2.jar; 
				./adaptor/spring-mvc/lib/jboss-servlet-api_3.0_spec-1.0.0.Final.jar; 
				./adaptor/spring-mvc/lib/commons-io-2.4.jar;
				./adaptor/spring-mvc/lib/commons-logging-1.1.1.jar;
				./adaptor/spring-mvc/lib/hibernate-core-4.0.1.Final.jar;
				./adaptor/spring-mvc/lib/jstl.jar;
				./adaptor/spring-mvc/lib/mybatis-3.1.1.jar;
				./adaptor/spring-mvc/lib/mysql-connector-java-5.1.18-bin.jar;
				./adaptor/spring-mvc/lib/org.springframework.aop-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.asm-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.aspects-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.beans-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.context.support-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.context-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.core-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.expression-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.instrument.tomcat-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.instrument-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.jdbc-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.jms-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.orm-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.oxm-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.test-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.transaction-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.web.portlet-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.web.servlet-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.web.struts-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/org.springframework.web-3.1.0.RC2.jar;
				./adaptor/spring-mvc/lib/spring-security-config-3.1.3.RELEASE.jar;
				./adaptor/spring-mvc/lib/spring-security-web-3.1.3.RELEASE.jar;
				./adaptor/spring-mvc/lib/spring-security-core-3.1.3.RELEASE.jar"/> 
		<property name="fullclasspath" value="${saxonlib};${ejb-lib};${web-lib}"/>
        <tstamp/>
        <echo/>
        <echo message="Project: ${project}    Version: ${currentversion}    Time: ${TODAY} ${TSTAMP}"/>
        <echo/>
        <echo/>
    </target>


    <target name="main" depends="init">
        <antcall target="makebuilddir"/>
  		<antcall target="transform"/>  
		<antcall target="copyfiles"/> 
       <antcall target="compileclasses"/>
		<antcall target="buildjar"/> 
    </target>

	<target name="makebuilddir">
		<mkdir dir="${workspace}"/>
		<mkdir dir="${workspace}/${appname}-EJB"/>
		<mkdir dir="${workspace}/${appname}-WEB"/>
		<mkdir dir="${builddir}"/>
		<mkdir dir="${builddir}/${appname}-EJB"/>
		<mkdir dir="${builddir}/${appname}-EJB/classes"/>
		<mkdir dir="${builddir}/${appname}-EJB/META-INF"/>
		<mkdir dir="${builddir}/${appname}-WEB"/>
		<mkdir dir="${builddir}/${appname}-WEB/filestore"/>
		<mkdir dir="${builddir}/${appname}-WEB/WEB-INF"/>
		<mkdir dir="${builddir}/${appname}-WEB/WEB-INF/lib"/>
		<mkdir dir="${builddir}/${appname}-WEB/WEB-INF/classes"/>
		
    </target>

	<target name="transform">
		<echo message="Transforming model to entity classes"/>
		 <java jar="${saxonlib}" fork="true" >
			<arg value="${modelfile}"/>
			<arg value="${xsltdir-ejb}/jpa-entity-class.xslt"/>
		 </java>
		 <echo message="Transforming model to service interface"/>
		 <java jar="${saxonlib}" fork="true" >
			<arg value="${modelfile}"/>
			<arg value="${xsltdir-ejb}/jpa-service-interface.xslt"/>
		 </java>
		 <echo message="Transforming model to service bean implementation"/>
		 <java jar="${saxonlib}" fork="true" >
			<arg value="${modelfile}"/>
			<arg value="${xsltdir-ejb}/jpa-service-bean.xslt"/>
		 </java>
		 <echo message="Transforming model to web controller classes"/>
		 <java jar="${saxonlib}" fork="true" >
			<arg value="${modelfile}"/>
			<arg value="${xsltdir-web}/web-controller.xslt"/>
		 </java>
		 <echo message="Transforming model to web JSP"/>
		 <java jar="${saxonlib}" fork="true" >
			<arg value="${modelfile}"/>
			<arg value="${xsltdir-web}/web-jsp.xslt"/>
		 </java>
	</target>

	 <target name="compileclasses">
        <javac srcdir="${workspace}/${appname}-EJB/ejbModule"
               destdir="${builddir}/${appname}-EJB/classes"
               includes="**/*.java"  classpath="${fullclasspath}"
               deprecation="yes" debug="yes"/>

		<javac srcdir="${workspace}/${appname}-WEB/src"
               destdir="${builddir}/${appname}-WEB/WEB-INF/classes"
               includes="**/*.java"  classpath="${fullclasspath};${builddir}/${appname}-EJB/classes"
               deprecation="yes" debug="yes"/>

    </target>

	<target name="copyfiles">
		<!-- copy config file -->
		<copy todir="${builddir}/${appname}-EJB/META-INF" >
            <fileset dir="${configdir-ejb}" >
                <include name="persistence.xml" />
            </fileset>
		</copy>

		<copy todir="${builddir}/${appname}-WEB/WEB-INF" >
            <fileset dir="${configdir-web}" >
                <include name="spring-servlet.xml" />
				<include name="web.xml" />
            </fileset>
		</copy>
		
		<!-- copy web content -->
		<copy todir="${builddir}/${appname}-WEB" >
            <fileset dir="${workspace}/${appname}-WEB/WebContent" >
                <include name="*.jsp" />
            </fileset>
		</copy>  

		<!-- copy lib files to web -->
		<copy todir="${builddir}/${appname}-WEB/WEB-INF/lib" >
            <fileset dir="${libdir-web}" >
                <include name="*.jar" />
            </fileset>
		</copy>
	</target>

	
	<target name="buildjar" depends="init">
		<jar destfile="${builddir}/${appname}-WEB/WEB-INF/lib/app-service-client.jar">
            <fileset dir="${builddir}/${appname}-EJB/classes">
				<include name="**/entity/*.class" />
				<include name="**/*Service.class" />
            </fileset>
        </jar>

		<!-- jar EJB -->
		<jar destfile="${builddir}/${appname}-EJB.jar">
            <fileset dir="${builddir}/${appname}-EJB/classes">
				<include name="**/*.*" />
            </fileset>
			<fileset dir="${builddir}/${appname}-EJB/">
				<include name="META-INF/*.*" />
            </fileset>
        </jar>

		<!-- jar WEB -->
		<jar destfile="${builddir}/${appname}-WEB.war">
            <fileset dir="${builddir}/${appname}-WEB">
				<include name="**/*.*" />
            </fileset>
        </jar>
	</target>


    <target name="cleanclasses" depends="init">
        <delete>
            <fileset dir="${builddir}/classes" includes="**/*.class"/>
        </delete>
    </target>

    <target name="cleanbuilddir" depends="init">
        <delete dir="${builddir}"/>
        
    </target>

    <target name="cleaninstalldir" depends="cleandynamic">
        <antcall target="cleanbuilddir"/>
        <delete dir="${installdir}/${module}/"/>
        <delete dir="${homedir}"/>
    </target>

    <target name="cleandynamic" depends="init">
        <delete>
            <fileset dir="${installdir}/home/pagebuild" excludes="precompiled.jar"/>
        </delete>
        <delete>
            <fileset dir="${installdir}/home/data" includes="*.ser"/>
        </delete>
    </target>

    


   
    
   <target name="copyapp">
		<!-- copy compiled classes file -->
        <copy todir="${projectclasses}" >
            <fileset dir="${builddir}/classes" >
                <include name="**/*.class" />
            </fileset>
        </copy>         
		
		<!-- copy component files -->
	   <delete dir="${apphome}/custom/config/docbases/${docbase_name}"/>
		<copy todir="${apphome}/custom/config/docbases/${docbase_name}" >
            <fileset dir="${srcdir}/${project}/component" >
                <include name="**/*" />
            </fileset>
        </copy>

		<!-- copy config files -->
		<copy todir="${apphome}/custom/config/docbases/${docbase_name}/config" >
            <fileset dir="${srcdir}/${project}/config" >
                <include name="**/*.xml" />
            </fileset>
        </copy>

		<!-- copy app.xml files -->
		<copy todir="${apphome}/custom/" >
            <fileset dir="${srcdir}/${project}/etc" >
                <include name="app.xml" />
            </fileset>
        </copy>

		<!-- copy theme files -->
		<copy todir="${apphome}/custom/theme" >
            <fileset dir="${srcdir}/${project}/theme" >
                <include name="**/*.*" />
            </fileset>
        </copy>

		<!-- copy string files -->
		<copy todir="${apphome}/custom/strings" >
            <fileset dir="${srcdir}/${project}/strings" >
                <include name="**/*.properties" />
            </fileset>
        </copy>

		<!-- copy java source files -->
		<copy todir="${apphome}/webtop/src" >
            <fileset dir="${srcdir}/${project}/src" >
                <include name="**/*" />
            </fileset>
        </copy>

		<!-- TODO: copy lib files -->
		<copy todir="${apphome}/WEB-INF/lib" >
            <fileset dir="${srcdir}/${project}/lib" >
                <include name="**/*.jar" />
            </fileset>
        </copy>
		<!-- TODO: copy tld files -->
		<copy todir="${apphome}/WEB-INF/tlds/jnj/custom/docbases/${docbase_name}/" >
            <fileset dir="${srcdir}/${project}/etc/tld" >
                <include name="**/*.tld" />
            </fileset>
        </copy>

    </target>

    <target name="javadoc" depends="init">
        <mkdir dir="${srcdir}/${project}/etc/documentation/javadoc"/>
        <javadoc destdir="${srcdir}/${project}/etc/documentation/javadoc/"
                 author="true"
                 version="true"
                 classpath="${fullclasspath};${builddir}/classes"
                 windowtitle="Webpublisher for SalesNet API"
                 doctitle="Webpublisher for SalesNet API"
                 private="true"
                 bottom="&lt;i>Copyright &#169; 2002 VeriSign Inc. All Rights Reserved.&lt;/i>">
          <link href="http://java.sun.com/products/jdk/1.3/docs/api"/> 
          <link href="http://www.atg.com/repositories/ContentCatalogRepository_en/manuals/D5.6.1/apidoc"/>
          <packageset dir="${srcdir}/${project}/src" defaultexcludes="yes">
              <include name="com/jnj/**" />
          </packageset>
        </javadoc>
    </target>

</project>

